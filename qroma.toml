# all directories in this file are located relative to the project root

[qroma.project]
id = "{{ qroma_project.project_id }}"
name = "{{ qroma_project.project_id }}"
# use semantic versioning - see https://en.wikipedia.org/wiki/Software_versioning [Semantic versioning]
version = "0.1.0"


[qroma.project.dirs]
pb_root = "{% raw %}{{ qroma_project_dir }}{% endraw %}/protobufs"
firmware_root = "{% raw %}{{ qroma_project_dir }}{% endraw %}/firmware/esp32-{{ qroma_project.project_id }}"
app_root = "{% raw %}{{ qroma_project_dir }}{% endraw %}/apps/py-{{ qroma_project.project_id }}"
site_root = "{% raw %}{{ qroma_project_dir }}{% endraw %}/sites/www-{{ qroma_project.project_id }}"


[qroma.project.firmware]
platforms = [
  {%- for dev_board_platform in qroma_project.firmware_platforms %}
  "{{ dev_board_platform.value }}",
  {%- endfor %}
]


[qroma.project.run.commands.firmware.platformio]
build = "run"
install = "run --target upload --environment esp32dev"
monitor = ""

[qroma.project.stages.sw.protobuf]
root_dir = "{% raw %}{{ qroma.project_dirs.pb_root }}{% endraw %}/protobufs"
compilers = [
  "nanopb",
  "python",
  "typescript",
  "dart",
]

[[qroma.project.stages.sw.protobuf.sources]]
source_path = "{% raw %}{{ qroma.project_dirs.pb_root }}{% endraw %}/protofiles-in"
dest_path = "{% raw %}{{ qroma.project_dirs.pb_root }}{% endraw %}/protofiles-out"


[qroma.project.stages.sw.protobuf.replication]
nanopb.dirs = ["{% raw %}{{ qroma.project_dirs.firmware_root }}{% endraw %}/src/qroma-proto", ]
python.dirs = ["{% raw %}{{ qroma.project_dirs.app_root }}{% endraw %}/qroma_proto", ]
typescript.dirs = ["{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/src/qroma-proto", ]
dart.dirs = []


[qroma.project.stages.sw.firmware]
project_dirs = []


[qroma.project.stages.sw.apps]
project_dirs = []


[qroma.project.stages.sw.sites]
project_dirs = []


[qroma.project.stages.sw.sites.bundle]
local_bundle_static_dir="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static"
local_bundle_static_qroma_dir="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma"
local_bundle_version_content_root_dir="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma/versions"
hosted_qroma_bundle_root="/qroma"
hosted_qroma_bundle_versions_root="/qroma/versions"
hosted_bundle_version_path="/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}"


# ESP32 Dev Board firmware and manifest files
[[qroma.project.stages.sw.sites.bundle.publish_version.firmware_file_replications]]
source_filepath="{% raw %}{{ qroma.project_dirs.firmware_root }}{% endraw %}/.pio/build/esp32dev/{{ qroma_project.project_id }}-firmware-esp32.bin"
local_publication_filepath="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/esp32dev/{{ qroma_project.project_id }}-firmware-esp32.bin"
hosted_publication_filepath="/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/esp32dev/{{ qroma_project.project_id }}-firmware-esp32.bin"

[[qroma.project.stages.sw.sites.bundle.publish_version.firmware_file_replications]]
source_filepath="{% raw %}{{ qroma.project_dirs.firmware_root }}{% endraw %}/.pio/build/esp32dev/{{ qroma_project.project_id }}-manifest-esp32.json"
local_publication_filepath="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/esp32dev/{{ qroma_project.project_id }}-manifest-esp32.json"
hosted_publication_filepath="/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/esp32dev/{{ qroma_project.project_id }}-manifest-esp32.json"


# TinyPico Board firmware and manifest files
[[qroma.project.stages.sw.sites.bundle.publish_version.firmware_file_replications]]
source_filepath="{% raw %}{{ qroma.project_dirs.firmware_root }}{% endraw %}/.pio/build/tinypico/{{ qroma_project.project_id }}-firmware-um_tinypico.bin"
local_publication_filepath="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/tinypico/{{ qroma_project.project_id }}-firmware-um_tinypico.bin"
hosted_publication_filepath="/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/tinypico/{{ qroma_project.project_id }}-firmware-um_tinypico.bin"

[[qroma.project.stages.sw.sites.bundle.publish_version.firmware_file_replications]]
source_filepath="{% raw %}{{ qroma.project_dirs.firmware_root }}{% endraw %}/.pio/build/tinypico/{{ qroma_project.project_id }}-manifest-um_tinypico.json"
local_publication_filepath="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/tinypico/{{ qroma_project.project_id }}-manifest-um_tinypico.json"
hosted_publication_filepath="/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/tinypico/{{ qroma_project.project_id }}-manifest-um_tinypico.json"


# Adafruit QT Py Board firmware and manifest files
[[qroma.project.stages.sw.sites.bundle.publish_version.firmware_file_replications]]
source_filepath="{% raw %}{{ qroma.project_dirs.firmware_root }}{% endraw %}/.pio/build/adafruit_qtpy_esp32c3/{{ qroma_project.project_id }}-firmware-adafruit_qtpy_esp32c3.bin"
local_publication_filepath="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/adafruit_qtpy_esp32c3/{{ qroma_project.project_id }}-firmware-adafruit_qtpy_esp32c3.bin"
hosted_publication_filepath="/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/adafruit_qtpy_esp32c3/{{ qroma_project.project_id }}-firmware-adafruit_qtpy_esp32c3.bin"

[[qroma.project.stages.sw.sites.bundle.publish_version.firmware_file_replications]]
source_filepath="{% raw %}{{ qroma.project_dirs.firmware_root }}{% endraw %}/.pio/build/adafruit_qtpy_esp32c3/{{ qroma_project.project_id }}-manifest-adafruit_qtpy_esp32c3.json"
local_publication_filepath="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/adafruit_qtpy_esp32c3/{{ qroma_project.project_id }}-manifest-adafruit_qtpy_esp32c3.json"
hosted_publication_filepath="/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/firmware/adafruit_qtpy_esp32c3/{{ qroma_project.project_id }}-manifest-adafruit_qtpy_esp32c3.json"


[[qroma.project.stages.sw.sites.bundle.publish_version.zipped_dirs]]
source_dir="{% raw %}{{ qroma.project_dirs.pb_root }}{% endraw %}/protofiles-out"
local_publication_zip_file="{% raw %}{{ qroma.project_dirs.site_root }}{% endraw %}/static/qroma/versions/{% raw %}{{ qroma.project_version }}{% endraw %}/protobufs.zip"


[qroma.project.stages.sw.sites.bundle.publish_version]
generated_files = []
